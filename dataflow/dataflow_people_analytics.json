{
	"name": "dataflow_people_analytics",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "employee"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "dmDepartment"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "employee2"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink2"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage1",
						"type": "LinkedServiceReference"
					},
					"name": "sink3"
				}
			],
			"transformations": [
				{
					"name": "Aggregate2"
				},
				{
					"name": "SurrogateKey1"
				},
				{
					"name": "DerivedColumn2"
				},
				{
					"name": "DerivedColumn3"
				},
				{
					"name": "Aggregate3"
				},
				{
					"name": "Lookup1"
				}
			],
			"script": "source(output(\n\t\temp_no as long,\n\t\tbirth_date as timestamp,\n\t\tgender as string,\n\t\tdepartment as string,\n\t\tleft as long,\n\t\thire_date as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: true,\n\tformat: 'parquet',\n\tfileSystem: 'trusted',\n\tcompressionCodec: 'snappy',\n\twildcardPaths:['hr/employees/employee']) ~> employee\nsource(output(\n\t\tdesc_department as string,\n\t\tsk_department as long\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tfileSystem: 'refined',\n\twildcardPaths:['hr/people_analytics/dm_department']) ~> dmDepartment\nsource(output(\n\t\temp_no as long,\n\t\tbirth_date as timestamp,\n\t\tgender as string,\n\t\tdepartment as string,\n\t\tleft as long,\n\t\thire_date as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'parquet',\n\tfileSystem: 'trusted',\n\twildcardPaths:['hr/employees/employee']) ~> employee2\nemployee aggregate(groupBy(department),\n\tcount = count(department)) ~> Aggregate2\nDerivedColumn2 keyGenerate(output(sk as long),\n\tstartAt: 1L) ~> SurrogateKey1\nAggregate2 derive(sk = department) ~> DerivedColumn2\nemployee2 derive(date = toDate(hire_date)) ~> DerivedColumn3\nDerivedColumn3 aggregate(groupBy(department,\n\t\tdate),\n\theadcount = count(emp_no)) ~> Aggregate3\nAggregate3, dmDepartment lookup(department == desc_department,\n\tmultiple: false,\n\tpickup: 'first',\n\tasc(sk_department, true),\n\tbroadcast: 'auto')~> Lookup1\nSurrogateKey1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfileSystem: 'refined',\n\tfolderPath: 'hr/people_analytics/dm_department',\n\tcompressionCodec: 'snappy',\n\tumask: 0777,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\tmapColumn(\n\t\tdesc_department = department,\n\t\tsk_department = sk\n\t)) ~> sink2\nLookup1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tfileSystem: 'refined',\n\tfolderPath: 'hr/people_analytics/ft_headcount',\n\tcompressionCodec: 'snappy',\n\tumask: 0777,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\tmapColumn(\n\t\tsk_date = date,\n\t\theadcount,\n\t\tsk_department\n\t)) ~> sink3"
		}
	}
}